{"version":3,"file":"helpers-CE3Eu4wb.js","sources":["../src/helpers.ts"],"sourcesContent":["import { deepClone, hexToLottieColor, IColors, IconData, ILottieProperty, isNil, isObjectLike, parseColor, parseColors, readProperties, updateProperties } from \"@lordicon/helpers\";\nimport { IPlayerOptions, IState } from \"./interfaces\";\n\nfunction findObject(currentData: any, key: string) {\n    const result: any[] = [];\n\n    for (const k of Object.keys(currentData)) {\n        const v = currentData[k];\n\n        if (isObjectLike(v)) {\n            result.push(...findObject(v, key));\n        }\n    }\n\n    if (currentData.x && typeof currentData.x === 'string' && currentData.x.includes(key)) {\n        result.push(currentData);\n    }\n\n    return result;\n}\n\nfunction assignColors(data: IconData, properties: ILottieProperty[], value: IColors) {\n    for (const colorName of Object.keys(value)) {\n        const color = parseColor(value[colorName]);\n        const colorObjects = findObject(data, `effect('${colorName}')('Color')`);\n\n        const lottieColor = hexToLottieColor(color);\n\n        // layers\n        for (const s of colorObjects) {\n            s.k = [...lottieColor, 1];\n        }\n\n        // properties\n        for (const p of properties) {\n            if (p.name === colorName) {\n                updateProperties(data, [p], lottieColor);\n                p.value = lottieColor;\n            }\n        }\n    }\n}\n\nexport function handleProps(props: IPlayerOptions) {\n    let iconData: any;\n    let states: IState[] = [];\n    let state: IState | undefined;\n    let properties: ILottieProperty[] = [];\n\n    if (props.icon) {\n        iconData = deepClone(props.icon);\n    }\n    \n    if (iconData) {\n        // read properties\n        properties = readProperties(iconData);\n        \n        // handle states\n        states = (iconData.markers || []).map((c: any) => {\n            const [partA, partB] = c.cm.split(':');\n            const newState: IState = {\n                time: c.tm,\n                duration: c.dr,\n                name: partB || partA,\n                default: partB && partA.includes('default') ? true : false,\n            };\n\n            if (newState.name === props.state) {\n                state = newState;\n            } else if (newState.default && isNil(props.state)) {\n                state = newState;\n            }\n\n            return newState;\n        });\n        \n        // fix states\n        if (states.length) {\n            const firstState = states[0];\n            const lastState = states[states.length - 1];\n\n            // fix animation time\n            iconData.ip = firstState.time;\n            iconData.op = lastState.time + lastState.duration + 1;\n        }\n\n        // assign colors directly to the icon data\n        if (props.colors) {\n            assignColors(iconData, properties.filter(c => c.type === 'color'), parseColors(props.colors));\n        }\n    }\n\n    return {\n        properties,\n        iconData,\n        states,\n        state,\n    };\n}"],"names":["findObject","currentData","key","result","k","Object","keys","v","isObjectLike","push","x","includes","handleProps","props","iconData","state","states","properties","icon","deepClone","readProperties","markers","map","c","partA","partB","cm","split","newState","time","tm","duration","dr","name","default","isNil","length","firstState","lastState","ip","op","colors","data","value","colorName","color","parseColor","colorObjects","lottieColor","hexToLottieColor","s","p","updateProperties","assignColors","filter","type","parseColors"],"mappings":"4KAGA,SAASA,EAAWC,EAAkBC,GAClC,MAAMC,EAAgB,GAEtB,IAAK,MAAMC,KAAKC,OAAOC,KAAKL,GAAc,CACtC,MAAMM,EAAIN,EAAYG,GAElBI,EAAaD,IACbJ,EAAOM,QAAQT,EAAWO,EAAGL,GAEpC,CAMD,OAJID,EAAYS,GAA8B,iBAAlBT,EAAYS,GAAkBT,EAAYS,EAAEC,SAAST,IAC7EC,EAAOM,KAAKR,GAGTE,CACX,CAwBM,SAAUS,EAAYC,GACxB,IAAIC,EAEAC,EADAC,EAAmB,GAEnBC,EAAgC,GAMpC,GAJIJ,EAAMK,OACNJ,EAAWK,EAAUN,EAAMK,OAG3BJ,EAAU,CAwBV,GAtBAG,EAAaG,EAAeN,GAG5BE,GAAUF,EAASO,SAAW,IAAIC,KAAKC,IACnC,MAAOC,EAAOC,GAASF,EAAEG,GAAGC,MAAM,KAC5BC,EAAmB,CACrBC,KAAMN,EAAEO,GACRC,SAAUR,EAAES,GACZC,KAAMR,GAASD,EACfU,WAAST,IAASD,EAAMb,SAAS,aASrC,OANIiB,EAASK,OAASpB,EAAME,OAEjBa,EAASM,SAAWC,EAAMtB,EAAME,UADvCA,EAAQa,GAKLA,CAAQ,IAIfZ,EAAOoB,OAAQ,CACf,MAAMC,EAAarB,EAAO,GACpBsB,EAAYtB,EAAOA,EAAOoB,OAAS,GAGzCtB,EAASyB,GAAKF,EAAWR,KACzBf,EAAS0B,GAAKF,EAAUT,KAAOS,EAAUP,SAAW,CACvD,CAGGlB,EAAM4B,QAlElB,SAAsBC,EAAgBzB,EAA+B0B,GACjE,IAAK,MAAMC,KAAavC,OAAOC,KAAKqC,GAAQ,CACxC,MAAME,EAAQC,EAAWH,EAAMC,IACzBG,EAAe/C,EAAW0C,EAAM,WAAWE,gBAE3CI,EAAcC,EAAiBJ,GAGrC,IAAK,MAAMK,KAAKH,EACZG,EAAE9C,EAAI,IAAI4C,EAAa,GAI3B,IAAK,MAAMG,KAAKlC,EACRkC,EAAElB,OAASW,IACXQ,EAAiBV,EAAM,CAACS,GAAIH,GAC5BG,EAAER,MAAQK,EAGrB,CACL,CA+CYK,CAAavC,EAAUG,EAAWqC,QAAO/B,GAAgB,UAAXA,EAAEgC,OAAmBC,EAAY3C,EAAM4B,QAE5F,CAED,MAAO,CACHxB,aACAH,WACAE,SACAD,QAER"}