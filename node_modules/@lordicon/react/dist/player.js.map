{"version":3,"file":"player.js","sources":["../src/player.tsx"],"sourcesContent":["import { ILottieProperty, isNil, lottieColorToHex } from '@lordicon/helpers';\nimport lottie, { AnimationConfig, AnimationItem } from 'lottie-web';\nimport React from 'react';\nimport { handleProps } from './helpers';\nimport { IPlayer, IPlayerOptions, IState } from './interfaces';\n\ntype LottieOptions = Omit<AnimationConfig, 'container'>;\n\ntype PlayerState = {}\n\ntype Options = IPlayerOptions;\n\nconst DEFAULT_LOTTIE_WEB_OPTIONS: Omit<AnimationConfig, 'container'> = {\n    renderer: \"svg\",\n    loop: false,\n    autoplay: false,\n    rendererSettings: {\n        preserveAspectRatio: \"xMidYMid meet\",\n        progressiveLoad: true,\n        hideOnTransparent: true,\n    },\n}\n\nconst ELEMENT_STYLE = `\n    :host {\n        position: relative;\n        display: block;\n        transform: translate3d(0px, 0px, 0px);\n        width: 100%;\n        aspect-ratio: 1/1;\n        overflow: hidden;\n    }\n\n    :host(.colorize) svg path[fill] {\n        fill: var(--lord-icon-colorize, currentColor);\n    }\n\n    :host(.colorize) svg path[stroke] {\n        stroke: var(--lord-icon-colorize, currentColor);\n    }\n\n    svg {\n        position: absolute;\n        pointer-events: none;\n        display: block;\n        transform: unset!important;\n    }\n\n    ::slotted(*) {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n    }\n\n    .body.ready ::slotted(*) {\n        display: none;\n    }\n`;\n\n/**\n * Current style sheet instance (if supported).\n */\nlet styleSheet: CSSStyleSheet;\n\nexport class Player extends React.Component<Options, PlayerState> implements IPlayer {\n    protected _ref?: React.RefObject<HTMLDivElement>;\n    \n    protected _states: IState[] = [];\n    protected _state?: IState;\n    protected _root?: ShadowRoot;\n    protected _iconData: any;\n    protected _properties: ILottieProperty[] = [];\n    \n    protected _lottie?: AnimationItem;\n    \n    constructor(props: Options) {\n        super(props);\n\n        const { iconData, states, state, properties } = handleProps(props);\n\n        this._iconData = iconData;\n        this._states = states;\n        this._state = state;\n        this._properties = properties;\n\n        this._ref = React.createRef<HTMLDivElement>();\n    }\n\n    connect() {\n        if (!this._iconData) {\n            return;\n        }\n        \n        const container: any = this._root!.lastElementChild;\n\n        // support css variables\n        const colors = this._properties.filter(c => c.type === 'color');\n        if (colors.length) {\n            let styleContent = '';\n            for (const color of colors) {\n                const key = color.name;\n                const value = lottieColorToHex(color.value);\n\n                styleContent += `\n                    :host(:not(.colorize)) svg path[fill].${key} {\n                        fill: var(--lord-icon-${key}, var(--lord-icon-${key}-base, ${value}));\n                    }\n        \n                    :host(:not(.colorize)) svg path[stroke].${key} {\n                        stroke: var(--lord-icon-${key}, var(--lord-icon-${key}-base, ${value}));\n                    }\n                `\n            }\n\n            const style = document.createElement(\"style\");\n            style.innerHTML = styleContent;\n            container!.appendChild(style);\n        }\n\n        const initialOptions: LottieOptions = {};\n\n        if (this._state) {\n            initialOptions.initialSegment = [this._state.time, this._state.time + this._state.duration + 1];\n        }\n\n        this._lottie = lottie.loadAnimation({\n            container,\n            animationData: this._iconData,\n            ...initialOptions,\n            ...DEFAULT_LOTTIE_WEB_OPTIONS,\n        });\n\n        this._lottie!.setDirection(this.props.direction || 1);\n\n        this._lottie.addEventListener('complete', (e) => {\n            this.onFinish();\n        });\n\n        if (this._lottie.isLoaded) {\n            this.onReady();\n        } else {\n            this._lottie.addEventListener('config_ready', () => {\n                this.onReady();\n            });\n        }\n    }\n\n    disconnect() {\n        if (!this._lottie) {\n            return;\n        }\n\n        this._lottie.destroy();\n        this._lottie = undefined;\n    }\n\n    componentDidMount() {\n        if (!this._root) {\n            this._root = this._ref?.current!.attachShadow({\n                mode: \"open\"\n            })!;\n    \n            // stylesheet\n            if (!styleSheet) {\n                styleSheet = new CSSStyleSheet();\n                styleSheet.replaceSync(ELEMENT_STYLE);\n            }\n\n            this._root.adoptedStyleSheets = [styleSheet];\n            \n            // create container\n            const container = document.createElement(\"div\");\n            container.classList.add('body');\n            this._root.appendChild(container);\n        }\n   \n        this.connect();\n    }\n\n    componentWillUnmount() {\n        this.disconnect();\n    }\n\n    componentDidUpdate(prevProps: Options, prevState: PlayerState) {\n        if (prevProps.state !== this.props.state) {\n            this.onStateChanged();\n        }\n\n        if (prevProps.direction !== this.props.direction) {\n            this.onDirectionChanged();\n        }\n\n        if (prevProps.icon !== this.props.icon || prevProps.colors !== this.props.colors) {\n            this.onIconChanged();\n        }\n    }\n\n    onFinish() {\n        this.props.onComplete?.();\n    }\n\n    onDirectionChanged() {\n        this._lottie!.setDirection(this.props.direction!);\n    }\n\n    onStateChanged() {\n        const isPlaying = this.isPlaying;\n\n        this._state = undefined;\n\n        if (isNil(this.props.state)) {\n            this._state = this._states.filter(c => c.default)[0];\n        } else if (this.props.state) {\n            this._state = this._states.filter(c => c.name === this.props.state)[0];\n        }\n\n        if (this._state) {\n            this._lottie?.setSegment(this._state.time, this._state.time + this._state.duration + 1);\n        } else {\n            this._lottie!.resetSegments(true);\n        }\n\n        this.goToFirstFrame();\n\n        if (isPlaying) {\n            this.pause();\n            this.play();\n        }\n    }\n\n    onIconChanged() {\n        const { iconData, states, state, properties } = handleProps(this.props);\n\n        this._iconData = iconData;\n        this._states = states;\n        this._state = state;\n        this._properties = properties;\n\n        this.disconnect();\n        this.connect();\n    }\n\n    onReady() {\n        this.props.onReady?.();\n    }\n\n    play() {\n        this._lottie!.play();\n    }\n\n    playFromBeginning() {\n        if (this._state) {\n            const a = this._state.time;\n            const b = this._state.time + this._state.duration + 1;\n            const c: [number, number] = [a, b];\n\n            this._lottie!.playSegments(c, true);\n        } else {\n            this._lottie!.goToAndPlay(0);\n        }\n    }\n\n    pause() {\n        this._lottie!.pause();\n    }\n\n    goToFirstFrame() {\n        this.goToFrame(0);\n    }\n\n    goToLastFrame() {\n        this.goToFrame(Math.max(0, this.frames));\n    }\n\n    goToFrame(frame: number) {\n        this._lottie!.goToAndStop(frame, true);\n    }\n\n    refresh() {\n        this._lottie?.renderer.renderFrame(null);\n    }\n\n    render() {\n        const size: number = this.props.size || 32;\n        const color: string|undefined = this.props.colorize || undefined;\n        \n        return (\n            <div ref={this._ref} className={this.props.colorize ? 'colorize' : undefined} style={{width: size, height: size, color, aspectRatio: 1, flexDirection: 'row'}}></div>\n        );\n    }\n\n    get frames() {\n        return this._lottie!.getDuration(true) - 1;\n    }\n\n    get isPlaying() {\n        return !this._lottie!.isPaused;\n    }\n\n    get states() {\n        return this._states;\n    }\n\n    get currentState() {\n        return this._state;\n    }\n}"],"names":["DEFAULT_LOTTIE_WEB_OPTIONS","renderer","loop","autoplay","rendererSettings","preserveAspectRatio","progressiveLoad","hideOnTransparent","styleSheet","Player","React","Component","_ref","_states","_state","_root","_iconData","_properties","_lottie","constructor","props","super","iconData","states","state","properties","handleProps","this","createRef","connect","container","lastElementChild","colors","filter","c","type","length","styleContent","color","key","name","value","lottieColorToHex","style","document","createElement","innerHTML","appendChild","initialOptions","initialSegment","time","duration","lottie","loadAnimation","animationData","setDirection","direction","addEventListener","e","onFinish","isLoaded","onReady","disconnect","destroy","undefined","componentDidMount","current","attachShadow","mode","CSSStyleSheet","replaceSync","adoptedStyleSheets","classList","add","componentWillUnmount","componentDidUpdate","prevProps","prevState","onStateChanged","onDirectionChanged","icon","onIconChanged","onComplete","isPlaying","isNil","default","setSegment","resetSegments","goToFirstFrame","pause","play","playFromBeginning","playSegments","goToAndPlay","goToFrame","goToLastFrame","Math","max","frames","frame","goToAndStop","refresh","renderFrame","render","size","colorize","_jsx","ref","className","width","height","aspectRatio","flexDirection","getDuration","isPaused","currentState"],"mappings":"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"}