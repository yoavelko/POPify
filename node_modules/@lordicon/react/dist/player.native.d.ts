import { ILottieProperty } from '@lordicon/helpers';
import React from 'react';
import { Animated, View } from 'react-native';
import { AnimationDirection, IPlayer, IPlayerOptions, IState } from './interfaces';
type PlayerState = {
    progress?: Animated.Value;
};
interface IAnimation {
    animation: Animated.CompositeAnimation;
    from: number;
    to: number;
    direction: AnimationDirection;
}
type Options = IPlayerOptions & View['props'];
export declare class Player extends React.Component<Options, PlayerState> implements IPlayer {
    protected _states: IState[];
    protected _state?: IState;
    protected _playing: boolean;
    protected _animation?: IAnimation;
    protected _progress: number;
    protected _iconData: any;
    protected _properties: ILottieProperty[];
    constructor(props: Options);
    connect(): void;
    disconnect(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(prevProps: Options, prevState: PlayerState): void;
    frameToProgress(frame: number): number;
    progressToFrame(progress: number): number;
    duration(frames: number): number;
    onFinish(isCancelled: boolean): void;
    onDirectionChanged(): void;
    onStateChanged(): void;
    onIconChanged(): void;
    onReady(): void;
    play(): void;
    playFromBeginning(): void;
    pause(): void;
    goToFirstFrame(): void;
    goToLastFrame(): void;
    render(): import("react/jsx-runtime").JSX.Element;
    get frames(): number;
    get isPlaying(): boolean;
    get states(): IState[];
    get currentState(): IState;
    get _totalFrames(): number;
    get _fr(): number;
}
export {};
