{"version":3,"file":"player.native.js","sources":["../src/player.native.tsx"],"sourcesContent":["import { ILottieProperty, isNil } from '@lordicon/helpers';\nimport LottieView from 'lottie-react-native';\nimport React from 'react';\nimport { Animated, Easing, View } from 'react-native';\nimport { handleProps } from './helpers';\nimport { AnimationDirection, IPlayer, IPlayerOptions, IState } from './interfaces';\n\nconst AnimatedLottieView = Animated.createAnimatedComponent(LottieView);\n\ntype PlayerState = {\n    progress?: Animated.Value;\n}\n\ninterface IAnimation {\n    animation: Animated.CompositeAnimation;\n    from: number;\n    to: number;\n    direction: AnimationDirection;\n}\n\ntype Options = IPlayerOptions & View['props'];\n\nexport class Player extends React.Component<Options, PlayerState> implements IPlayer {\n    protected _states: IState[] = [];\n    protected _state?: IState;\n    protected _playing: boolean = false;\n    protected _animation?: IAnimation;\n    protected _progress: number = 0;\n    protected _iconData: any;\n    protected _properties: ILottieProperty[] = [];\n    \n    constructor(props: Options) {\n        super(props);\n        \n        const { iconData, states, state, properties } = handleProps(props);\n\n        this._iconData = iconData;\n        this._states = states;\n        this._state = state;\n        this._properties = properties;\n\n        this.state = { \n            progress: new Animated.Value(1),\n        };\n\n        this.state.progress!.addListener(({ value }) => {\n            this._progress = value;\n        });\n    }\n\n    connect() {\n        if (!this._iconData) {\n            return;\n        }\n\n        this.goToFirstFrame();\n        this.onReady();\n    }\n\n    disconnect() {\n        if (this._animation) {\n            this._animation.animation.stop();\n            this._animation = undefined;\n        }\n    }\n\n    componentDidMount() {\n        this.connect();\n    }\n\n    componentWillUnmount() {\n        this.disconnect();\n    }\n\n    componentDidUpdate(prevProps: Options, prevState: PlayerState) {\n        if (prevProps.state !== this.props.state) {\n            this.onStateChanged();\n        }\n\n        if (prevProps.direction !== this.props.direction) {\n            this.onDirectionChanged();\n        }\n\n        if (prevProps.icon !== this.props.icon || prevProps.colors !== this.props.colors) {\n            this.onIconChanged();\n        }\n    }\n\n    frameToProgress(frame: number) {\n        return frame / this._totalFrames;\n    }\n\n    progressToFrame(progress: number) {\n        return progress * this._totalFrames;\n    }\n\n    duration(frames: number) {\n        return frames * this._fr;\n    }\n\n    onFinish(isCancelled: boolean) {\n        this._playing = false;\n\n        if (this._animation && !isCancelled) {\n            this._animation = undefined;\n        }\n\n        if (!isCancelled) {\n            this.props.onComplete?.();\n        }\n    }\n\n    onDirectionChanged() {\n        if (!this._animation) {\n            return;\n        }\n\n        const isPlaying = this._playing;\n\n        this._animation.animation.stop();\n        const animation = Animated.timing(this.state.progress!, {\n            toValue: this.frameToProgress(this._animation.from),\n            duration: this.duration(Math.abs(this.progressToFrame(this._progress) - this._animation.from)),\n            useNativeDriver: false,\n            easing: Easing.linear,\n        });\n\n        this._animation = {\n            animation,\n            from: this._animation.to,\n            to: this._animation.from,\n            direction: this.props.direction || 1,\n        };\n\n        if (isPlaying) {\n            this._playing = true;\n\n            animation.start(({ finished }: { finished: boolean }) => {\n                this.onFinish(!finished);\n            });\n        }\n    }\n\n    onStateChanged() {\n        const isPlaying = this.isPlaying;\n\n        this._state = undefined;\n\n        if (isNil(this.props.state)) {\n            this._state = this._states.filter(c => c.default)[0];\n        } else if (this.props.state) {\n            this._state = this._states.filter(c => c.name === this.props.state)[0];\n        }\n\n        this.playFromBeginning();\n        this.pause()\n\n        if (isPlaying) {\n            this.play();\n        }\n    }\n    \n    onIconChanged() {\n        const { iconData, states, state, properties } = handleProps(this.props);\n\n        this._iconData = iconData;\n        this._states = states;\n        this._state = state;\n        this._properties = properties;\n\n        this.disconnect();\n        this.connect();\n    }\n\n    onReady() {\n        this.props.onReady?.();\n    }\n\n    play() {\n        if (this._animation) {\n            this._playing = true;\n\n            this._animation.animation.start(({ finished }: { finished: boolean }) => {\n                this.onFinish(!finished);\n            });\n        } else {\n            this._playing = true;\n\n            const a: number = this._state ? this._state!.time : 0;\n            const b: number = this._state ? (this._state!.time + this._state!.duration) : this._totalFrames;\n            const c: number[] = this.props.direction === -1 ? [b, a] : [a, b];\n            const duration = this.duration(Math.abs(b - a));\n\n            if (this.progressToFrame(this._progress).toFixed(4) === c[1].toFixed(4)) {\n                this.onFinish(false);\n                return;\n            }\n            \n            this.state.progress?.setValue(this.frameToProgress(c[0]));\n    \n            const animation = Animated.timing(this.state.progress!, {\n                toValue: this.frameToProgress(c[1]),\n                duration,\n                useNativeDriver: false,\n                easing: Easing.linear,\n            });\n    \n            animation.start(({ finished }: { finished: boolean }) => {\n                this.onFinish(!finished);\n            });\n    \n            this._animation = {\n                animation,\n                from: c[0],\n                to: c[1],\n                direction: this.props.direction || 1,\n            };\n        }\n    }\n\n    playFromBeginning() {\n        this._playing = true;\n\n        const a = this._state ? this._state!.time : 0;\n        const b = this._state ? (this._state!.time + this._state!.duration) : this._totalFrames;\n        const c = [a, b];\n        const duration = this.duration(Math.abs(b - a));\n        \n        this.state.progress?.setValue(this.frameToProgress(c[0]));\n\n        const animation = Animated.timing(this.state.progress!, {\n            toValue: this.frameToProgress(c[1]),\n            duration,\n            useNativeDriver: false,\n            easing: Easing.linear,\n        });\n\n        animation.start(({ finished }: { finished: boolean }) => {\n            this.onFinish(!finished);\n        });\n\n        this._animation = {\n            animation,\n            from: c[0],\n            to: c[1],\n            direction: this.props.direction || 1,\n        };\n    }\n\n    pause() {\n        if (this._animation) {\n            this._animation.animation.stop();\n        }\n    }\n\n    goToFirstFrame() {\n        const p = this._state ? this._state!.time : 0;\n        this.state.progress?.setValue(this.frameToProgress(p));\n    }\n\n    goToLastFrame() {\n        const p = this._state ? (this._state.time + this._state.duration) : 0;\n        this.state.progress?.setValue(this.frameToProgress(p));\n    }\n\n    render() {\n        const size = this.props.size || 32;\n\n        return (\n            <View style={[{\n                width: size,\n                height: size,\n                aspectRatio: 1,\n                flexDirection: 'row',\n            }, this.props.style]}>\n                <AnimatedLottieView  \n                    style={[{flex: 1}]} \n                    autoPlay={false}\n                    loop={false}\n                    progress={this.state.progress}\n                    source={this._iconData}\n                    renderMode={this.props.renderMode}\n                    cacheComposition={false}\n                    colorFilters={ this.props.colorize ? [{ keypath: '*', color: this.props.colorize } ] : undefined }\n                />\n            </View>\n        );\n    }    \n    \n    get frames() {\n        return this._state?.duration || this._totalFrames;\n    }\n\n    get isPlaying() {\n        return this._playing;\n    }\n\n    get states() {\n        return this._states;\n    }\n\n    get currentState() {\n        return this._state;\n    }\n\n    get _totalFrames() {\n        return this._iconData.op - 1;\n    }\n\n    get _fr() {\n        return 1000 / this._iconData.fr;\n    }\n}\n"],"names":["AnimatedLottieView","Animated","createAnimatedComponent","LottieView","Player","React","Component","_states","_state","_playing","_animation","_progress","_iconData","_properties","constructor","props","super","iconData","states","state","properties","handleProps","this","progress","Value","addListener","value","connect","goToFirstFrame","onReady","disconnect","animation","stop","undefined","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","prevState","onStateChanged","direction","onDirectionChanged","icon","colors","onIconChanged","frameToProgress","frame","_totalFrames","progressToFrame","duration","frames","_fr","onFinish","isCancelled","onComplete","isPlaying","timing","toValue","from","Math","abs","useNativeDriver","easing","Easing","linear","to","start","finished","isNil","filter","c","default","name","playFromBeginning","pause","play","a","time","b","toFixed","setValue","p","goToLastFrame","render","size","_jsx","View","style","width","height","aspectRatio","flexDirection","flex","autoPlay","loop","source","renderMode","cacheComposition","colorFilters","colorize","keypath","color","currentState","op","fr"],"mappings":"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"}